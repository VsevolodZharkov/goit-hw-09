{"mappings":"AAAA,IAEIA,SACAC,QACAC,UAJEC,KAAOC,SAASC,cAAc,SAMpC,SAASC,SAASC,G,oBAOhBC,QAAQC,IAAIC,GACZF,QAAQC,IAAIE,GACZC,YAAW,WACRC,cAAeF,EAAGD,GAChBI,MAAK,SAAAC,G,IAAGC,EAACD,EAADC,EAAGC,EAAKF,EAALE,MACVT,QAAQC,IAAI,uBAAiCS,OAARF,EAAE,QAAYE,OAAND,EAAM,UAEpDE,OAAM,SAAAJ,G,IAAGC,EAACD,EAADC,EAAGC,EAAKF,EAALE,MACXT,QAAQC,IAAI,sBAAgCS,OAARF,EAAE,QAAYE,OAAND,EAAM,YAEpDP,IAhBJH,EAAEa,iBACF,IAAgCC,EAAAd,EAAEe,OAAOC,SAAjCC,EAAwBH,EAAxBJ,MAAOQ,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACrB1B,SAAW2B,OAAOH,EAAMI,OACxB3B,QAAU0B,OAAOF,EAAKG,OACtB1B,UAAYyB,OAAOD,EAAOE,OAC1B,IAAK,IAAIjB,EAAI,EAAED,EAAQV,SAAUW,GAAKT,UAAWS,GAAK,EAAGD,GAAST,QAAO4B,EAAAlB,EAAAD,GAe3E,SAASG,cAAciB,EAAUb,GAChCT,QAAQC,IAAIqB,EAAUb,GACrB,IAAMc,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQL,EAAUb,GAElBmB,EAAON,EAAUb,MAjCvBd,KAAKkC,iBAAiB,SAAU/B","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', inputVal);\nlet delayVal;\nlet stepVal;\nlet amountVal;\n\nfunction inputVal(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n  delayVal = Number(delay.value);\n  stepVal = Number(step.value);\n  amountVal = Number(amount.value);\n  for (let i = 1,delay = delayVal; i <= amountVal; i += 1, delay += stepVal ) {\n\t\tconsole.log(delay);\n\t\tconsole.log(i);\n\t\tsetTimeout(() => {\n    \tcreatePromise( i, delay )\n      .then(({ i, delay }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${delay}ms`);\n      })\n      .catch(({ i, delay }) => {\n        console.log(`❌ Rejected promise ${i} in ${delay}ms`);\n      });\n  \t}, delay )\n\t}\n}\n\nfunction createPromise(position, delay) {\n\tconsole.log(position, delay);\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(position, delay);\n    } else {\n      reject(position, delay);\n    }\n  });\n}\n\n// \tconst btnRef = document.querySelector('.submit');\n// \tconst formRef = document.querySelector('.form');\n// \tconst STORAGE_KEY = 'formData';\n// \tlet numberPromis = 0;\n// \tlet diff = '';\n\n// \t// let delayEL = ;\n// \tconst inputHandler = e => {\n// \t\tconst { name, value } = e.target;\n\n// \tconst savedData = localStorage.getItem(STORAGE_KEY);\n// \tconst parsedData = JSON.parse(savedData);\n\n// \t\tconst formData = {\n// \t\t...parsedData,\n// \t\t[name]: value,\n// \t\t};\n\n// \t\tconst serlizedData = JSON.stringify(formData);\n// \t\tlocalStorage.setItem(STORAGE_KEY, serlizedData);\n// \t};\n\n// const xmite = (e) => {\n// \te.preventDefault();\n// \tconst savedData = localStorage.getItem(STORAGE_KEY);\n// \tconst parsedData = JSON.parse(savedData);\n// \tdiff = parsedData;\n// \tconst { position, delay, amount } = diff;\n\n// \tfor ( let i = 0; i < amount; i++ ) {\n\n// \t\tcreatePromise();\n// \t};\n// };\n\n// const createPromise = () => {\n// \tconst prom = new Promise((resolve, reject) => {\n// \t\t\tconst shouldResolve = Math.random() > 0.3;\n// \t\tsetTimeout(() => {\n// \t\t\tif(shouldResolve) {\n// \t\t\t\tnumberPromis += 1;\n// \t\t\t\tconsole.log(numberPromis);\n// \t\t\t\tconsole.log(00)\n// \t\t\t\tresolve();\n// \t\t\t} else {\n// \t\t\t\tnumberPromis += 1;\n// \t\t\t\tconsole.log(numberPromis);\n// \t\t\t\tconsole.log(77)\n// \t\t\t\treject((err) => {\n// \t\t\t\t\tif (err)\n// \t\t\t\t\t\tconsole.log(\"Adding Location error\" + err);\n// \t\t\t\t\treturn Promise.reject();\n// \t\t\t\t});\n// \t\t\t}\n// \t\t},1000)\n// \t})\n// \treturn prom;\n// };\n// createPromise()\n// .then(( position, delay ) => {\n// \tconsole.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n// })\n// .catch(( position, delay ) => {\n// \tconsole.log(`❌ Rejected promise ${position} in ${delay}ms`);\n// });\n// formRef.addEventListener('input', inputHandler);\n// btnRef.addEventListener('click', xmite);\n"],"names":["delayVal","stepVal","amountVal","form","document","querySelector","inputVal","e","console","log","delay1","i1","setTimeout","createPromise","then","param","i","delay","concat","catch","preventDefault","_elements","target","elements","delay2","step","amount","Number","value","_loop","position","shouldResolve","Math","random","Promise","resolve","reject","addEventListener"],"version":3,"file":"03-promises.488427a0.js.map"}